#set($classe = ${model.elementName})
#set($vo = $stringUtils.uncapitalise(${model.elementName}))
#set($daoVar = $stringUtils.uncapitalise(${dao.name}))
#set($daoType = $stringUtils.capitalise(${type}))
#if($package)
package $package;
#end

import java.util.List;
import com.opensymphony.xwork.Action;
#if($extends)import $extends.fullyName;#end
import com.opensymphony.xwork.ActionSupport;
#if($model)
import $model.fullyName;
import $daoFactory.fullyName;
import $dao.fullyName;
#end
#if($modelDriven)
import com.opensymphony.xwork.ModelDriven;
#end

/**
* Demo: Simple CRUD Application with WebWork2
* 
* author $author
*/
public class $class extends ActionSupport#if($modelDriven) implements ModelDriven#end
{
	private ${dao.name} ${daoVar} =#if($ioc) null#else ${daoFactory.name}.get${daoType}Factory().get${dao.name}()#end;

	private List ${vo}s = null;

#if($model)
	private $model.name $vo;
#end

	/**
	 * @see com.opensymphony.xwork.Action#execute()
	 */
	public String execute() throws Exception {
		return Action.SUCCESS;
	}

	public String list() throws Exception {
		${vo}s = ${daoVar}.list();

		return Action.SUCCESS;
	}

	public String load() throws Exception {
#if($modelDriven)
		$classe local${classe} = ($classe) ${daoVar}.load(${vo}.getId());

		//Before the action executes, The model was put on the top of value stack by the ModelDrivenInterceptor
		//So we should copy the properties to this object: getModel()
		org.apache.commons.beanutils.BeanUtils.copyProperties(getModel(),local${classe});

		//TODO Need some help here. What´s the best aproach to handle this?
#else
		$vo = ($classe) ${daoVar}.load(${vo}.getId());
#end
		return Action.SUCCESS;
	}

	public String save() throws Exception {

		//${daoVar}.save($vo);
		${daoVar}.saveOrUpdate($vo, ${vo}.getId());

		return Action.SUCCESS;
	}

	public String delete() throws Exception {
#if($modelDriven)
		${daoVar}.delete(getModel());
#else
		${daoVar}.delete(get${classe}());
#end
		return Action.SUCCESS;
	}

	/**
	 * @return
	 */
	public List get${classe}s() {
		return ${vo}s;
	}

#if($validate)
	public void validate(){
		// validate your objects here!
	}	
#end

#if($modelDriven)
	/**
	 * Implement the ModelDriven interface. 
	 * The ModelDrivenInterceptor will
	 * push the model in the top of the ValueStack.
	 * Note that you don´t need to implement the get/set to the ${classe}. 
	 * Just implement the getModel()
	 * 
	 * @see com.opensymphony.xwork.ModelDriven#getModel()
	 */
	public Object getModel(){
		if(user == null){
			user = new ${classe}();
		}
		return user;
	}
#elseif($classe)
	public $classe get${classe}(){
		if($vo == null){
			$vo = new ${classe}();
		}
		return $vo;
	}
	public void set${classe}(${classe} $vo){
		this.${vo}=$vo;
	}
#end
}